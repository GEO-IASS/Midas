<?xml version="1.0" encoding="UTF-8"?>
<phpcheckstyle-configuration>
    <test name="phpException" level="error"/>

    <!-- *********************************************************  -->
    <!-- These functions are not tested for naming                  -->
    <!-- cf http://www.php.net/manual/en/language.oop5.magic.php    -->
    <!-- *********************************************************  -->
    <config name="specialFunctions">
        <configItem value="__autoload"/>
        <configItem value="__call"/>
        <configItem value="__callStatic"/>
        <configItem value="__clone"/>
        <configItem value="__construct"/>
        <configItem value="__destruct"/>
        <configItem value="__get"/>
        <configItem value="__invoke"/>
        <configItem value="__isset"/>
        <configItem value="__set_state"/>
        <configItem value="__set"/>
        <configItem value="__sleep"/>
        <configItem value="__toString"/>
        <configItem value="__unset"/>
        <configItem value="__wakeup"/>
    </config>

    <!-- *********************************************************  -->
    <!-- These variables are not tested for naming                  -->
    <!-- *********************************************************  -->
    <config name="systemVariables">
        <configItem value="$_COOKIE"/>
        <configItem value="$_ENV"/>
        <configItem value="$_FILES"/>
        <configItem value="$_GET"/>
        <configItem value="$_POST"/>
        <configItem value="$_REQUEST"/>
        <configItem value="$_SERVER"/>
        <configItem value="$_SESSION"/>
        <configItem value="$HTTP_COOKIE_VARS"/>
        <configItem value="$HTTP_ENV_VARS"/>
        <configItem value="$HTTP_GET_VARS"/>
        <configItem value="$HTTP_POST_VARS"/>
        <configItem value="$HTTP_SERVER_VARS"/>
        <configItem value="$HTTP_SESSION_VARS"/>
        <configItem value="$this"/>
    </config>


    <!--  ****************  -->
    <!--        Naming      -->
    <!--  ****************  -->

    <!-- Check Constant Naming -->
    <test name="constantNaming" regexp="/^[A-Z][a-zA-Z0-9_]*$/" level="error"/>

    <!-- Check Variable Naming -->
    <test name="variableNaming" regexp="/^[a-zA-Z0-9_]*$/"/>
    <test name="topLevelVariableNaming" regexp="/^[a-zA-Z0-9_]*$/"/>
    <test name="localVariableNaming" regexp="/^[a-zA-Z0-9_]*$/"/>
    <test name="memberVariableNaming" regexp="/^[a-zA-Z0-9_]*$/"/>

    <!-- Check Function Naming -->
    <test name="functionNaming" regexp="/^[a-z][a-zA-Z0-9_]*$/" level="error"/>

    <!-- Check Protected Naming -->
    <test name="protectedFunctionNaming" regexp="/^[a-z_][a-zA-Z0-9_]*$/" level="error"/>

    <!-- Check Private Function Naming -->
    <test name="privateFunctionNaming" regexp="/^[a-z_][a-zA-Z0-9_]*$/" level="error"/>

    <!-- Checks the constuctor naming -->
    <test name="constructorNaming">
        <property name="naming" value="new"/>
    </test>

    <!-- Check Class Naming -->
    <test name="classNaming" regexp="/^[A-Z][a-zA-Z0-9_]*$/" level="error"/>

    <!-- Check Interface Naming -->
    <test name="interfaceNaming" regexp="/^[A-Z][a-zA-Z0-9_]*$/" level="error"/>

    <!-- File Naming -->
    <test name="fileNaming" regexp="/^[a-zA-Z0-9][a-zA-Z0-9._]*$/" level="error"/>


    <!--  ****************  -->
    <!--      PHP Tags      -->
    <!--  ****************  -->

    <!-- Test if a short php code open tag is used -->
    <test name="noShortPhpCodeTag"/>

    <!-- Test if a PHP closing file is present at the end of a file -->
    <test name="noFileCloseTag"/>

    <!-- Test if a file finish with some inner HTML -->
    <test name="noFileFinishHTML" level="error"/>

    <!-- PHP tags (start and stop) should be at the beginning of a line -->
    <test name="phpTagsStartLine"/>


    <!--  ****************  -->
    <!--      Comments      -->
    <!--  ****************  -->

    <!-- Check if some shell style comments are used (#) -->
    <test name="noShellComments"/>

    <!-- Tests that every function and class is immediately preceded by a docblock -->
    <test name="docBlocks">
        <property name="excludePrivateMembers" value="true"/>
        <property name="testReturn" value="false"/>
        <property name="testParam" value="false"/>
        <property name="testThrow" value="false"/>
    </test>

    <!-- Check for the presence of a mandatory header -->
    <test name="mandatoryHeader">
        <property name="header" value="
/*=========================================================================
 MIDAS Server
 Copyright (c) Kitware SAS. 26 rue Louis GuÃ©rin. 69100 Villeurbanne, FRANCE
 All rights reserved.
 More information http://www.kitware.com
"/>
    </test>


    <!--  ****************  -->
    <!--    Indentation     -->
    <!--  ****************  -->

    <!-- Check the position of the open curly brace in a control structure (if) -->
    <!-- sl = same line -->
    <!-- nl = new line -->
    <test name="controlStructOpenCurly">
        <property name="position" value="sl"/>
    </test>

    <!-- Check the position of the close curly brace  -->
    <test name="controlCloseCurly"></test>

    <!-- Check the position of the else -->
    <!-- sl = same line -->
    <!-- nl = new line -->
    <test name="controlStructElse">
        <property name="position" value="sl"/>
    </test>


    <!--  ****************  -->
    <!--      Quotes        -->
    <!--  ****************  -->
    <!--
    <test name="preferQuotes">
        <property name="type" value="single"/>
    </test>
    -->


    <!--  ****************  -->
    <!--      Spaces        -->
    <!--  ****************  -->

    <!-- Tests that the control statements are followed by a space before the opening parenthesis -->
    <test name="spaceAfterControlStmt"/>

    <!-- Check that there is no space after a function name in a function call -->
    <test name="noSpaceAfterFunctionName"/>

    <!-- Check for the (required) presence of a white space after some tokens -->
    <test name="checkWhiteSpaceAfter">
        <exception value="."/>
        <exception value="{"/>
        <exception value="}"/>
    </test>

    <!-- Check for the (required) presence of a white space before some tokens -->
    <test name="checkWhiteSpaceBefore">
        <exception value=":"/>
        <exception value="."/>
        <exception value="{"/>
        <exception value="}"/>
    </test>

    <!-- Check that there is no space before before some tokens -->
    <test name="noSpaceBeforeToken"></test>

    <!-- Check that there is no space after some tokens -->
    <test name="noSpaceAfterToken"></test>


    <!--  ****************  -->
    <!--      Prohibited    -->
    <!--  ****************  -->

    <!-- Check for prohibited functions -->
    <test name="checkProhibitedFunctions">
        <item value="define_syslog_variables"/>
        <item value="die"/>
        <item value="dl"/>
        <item value="magic_quotes_runtime"/>
        <item value="phpinfo"/>
        <item value="set_magic_quotes_runtime"/>
        <item value="sql_regcase "/>
        <item value="system"/>
        <item value="var_dump"/>
    </test>

    <!-- Check for prohibited tokens -->
    <test name="checkProhibitedTokens">
        <item value="T_BAD_CHARACTER"/>
        <item value="T_DECLARE"/>
        <item value="T_ENDDECLARE"/>
        <item value="T_ENDFOR"/>
        <item value="T_ENDFOREACH"/>
        <item value="T_ENDIF"/>
        <item value="T_ENDSWITCH"/>
        <item value="T_ENDWHILE"/>
        <item value="T_HALT_COMPILER"/>
        <item value="T_OLD_FUNCTION"/>
        <item value="T_PRINT"/>
    </test>


    <!--  ****************  -->
    <!--      Other         -->
    <!--  ****************  -->

    <!-- All arguments with default values should be at the end -->
    <test name="defaultValuesOrder"/>

    <!-- Check for silenced errors before function calls -->
    <test name="checkSilencedError">
        <exception value="chmod"/>
        <exception value="ldap_bind"/>
        <exception value="mkdir"/>
        <exception value="readdir"/>
        <exception value="rename"/>
    </test>

    <!-- Check for encapsed variables inside a string -->
    <test name="encapsedVariablesInsideString"></test>

    <!-- Use boolean operators instead of logical operators -->
    <test name="useBooleanOperators"></test>

    <!-- Check for empty blocks -->
    <!-- <test name="checkEmptyBlock"></test> -->

    <!-- Check for empty statements -->
    <test name="checkEmptyStatement"></test>

    <!-- Check for the presence of heredoc -->
    <test name="checkHeredoc"></test>

    <!-- Check for braces around code blocks (if, else, elseif, do, while, for, foreach) -->
    <test name="needBraces"></test>

    <!-- Switch need a default value -->
    <test name="switchNeedDefault"></test>

    <!-- Switch default value should be at the end -->
    <test name="switchDefaultOrder"></test>

    <!-- Avoid using unary operators (++) inside a control statement -->
    <test name="checkUnaryOperator">
        <exception value="for"/>
    </test>

    <!-- Only one class declaration per PHP file -->
    <test name="oneClassPerFile"></test>

    <!-- Detect empty files -->
    <test name="checkEmptyFile"/>


    <!--  ****************  -->
    <!--      Unused        -->
    <!--  ****************  -->

    <!-- Detect unused code (after return or throw) -->
    <test name="checkUnusedCode"></test>


    <!--  *******************  -->
    <!--      Optimization     -->
    <!--  *******************  -->

    <!-- Avoid using a count/sizeof function inside a loop -->
    <test name="functionInsideLoop"></test>


    <!--  *******************  -->
    <!--      Deprecation      -->
    <!--  *******************  -->

    <!-- Replace deprecated methods -->
    <test name="checkDeprecation">
        <deprecated old="$HTTP_COOKIE_VARS" new="$_COOKIE" version="5.3"/>
        <deprecated old="$HTTP_ENV_VARS" new="$_ENV" version="5.3"/>
        <deprecated old="$HTTP_GET_VARS" new="$_GET" version="5.3"/>
        <deprecated old="$HTTP_POST_VARS" new="$_POST" version="5.3"/>
        <deprecated old="$HTTP_SERVER_VARS" new="$_SERVER" version="5.3"/>
        <deprecated old="$HTTP_SESSION_VARS" new="$_SESSION" version="5.3"/>
        <deprecated old="call_user_method_array" new="call_user_func_array" version="4.1"/>
        <deprecated old="call_user_method" new="call_user_func" version="4.1"/>
        <deprecated old="define_syslog_variables" new="none" version="5.4"/>
        <deprecated old="dl" new="extension_loaded" version="5.3"/>
        <deprecated old="ereg_replace" new="preg_replace('@'.$pattern.'@', $string)" version="5.3"/>
        <deprecated old="ereg" new="preg_match('@'.$pattern.'@', $string)" version="5.3"/>
        <deprecated old="eregi_replace" new="preg_replace('@'.$pattern.'@i', $string)" version="5.3"/>
        <deprecated old="eregi" new="preg_match('@'.$pattern.'@i', $string)" version="5.3"/>
        <deprecated old="import_request_variables" new="none" version="5.4"/>
        <deprecated old="magic_quotes_runtime" new="none" version="5.3"/>
        <deprecated old="mcrypt_generic_end" new="mcrypt_generic_deinit" version="5.4"/>
        <deprecated old="mysql_db_query" new="mysql_select_db and mysql_query" version="5.3"/>
        <deprecated old="mysql_escape_string" new="mysql_real_escape_string" version="5.3"/>
        <deprecated old="mysql_list_dbs" new="none" version="5.4"/>
        <deprecated old="mysqli_bind_param" new="mysqli_stmt_bind_param" version="5.4"/>
        <deprecated old="mysqli_bind_result" new="mysqli_stmt_bind_result" version="5.4"/>
        <deprecated old="mysqli_client_encoding" new="mysqli_character_set_name" version="5.4"/>
        <deprecated old="mysqli_fetch" new="mysqli_stmt_fetch" version="5.4"/>
        <deprecated old="mysqli_get_metadata" new="mysqli_stmt_result_metadata" version="5.4"/>
        <deprecated old="mysqli_param_count" new="mysqli_stmt_param_count" version="5.4"/>
        <deprecated old="mysqli_send_long_data" new=" mysqli_stmt_send_long_data" version="5.4"/>
        <deprecated old="session_is_registered" new="$_SESSION" version="5.3"/>
        <deprecated old="session_register" new="$_SESSION" version="5.3"/>
        <deprecated old="session_unregister" new="$_SESSION" version="5.3"/>
        <deprecated old="set_magic_quotes_runtime" new="none" version="5.3"/>
        <deprecated old="set_socket_blocking" new="stream_set_blocking" version="5.3"/>
        <deprecated old="split" new="explode($pattern, $string) or preg_split('@'.$pattern.'@', $string)"
            version="5.3"/>
        <deprecated old="spliti" new="preg_split('@'.$pattern.'@i', $string)" version="5.3"/>
        <deprecated old="sql_regcase" new="none" version="5.3"/>
    </test>


    <!--  *******************  -->
    <!--      PHP Aliases      -->
    <!--  *******************  -->

    <!-- Replace deprecated methods -->
    <test name="checkAliases">
        <alias old="chop" new="rtrim()"/>
        <alias old="die" new="exit()"/>
        <alias old="doubleval" new="floatval()"/>
        <alias old="fputs" new="fwrite()"/>
        <alias old="ini_alter" new="ini_set()"/>
        <alias old="is_double" new="is_float()"/>
        <alias old="is_integer" new="is_int()"/>
        <alias old="is_long" new="is_int()"/>
        <alias old="is_real" new="is_float()"/>
        <alias old="is_writeable" new="is_writable()"/>
        <alias old="join" new="implode()"/>
        <alias old="key_exists" new="array_key_exists()"/>
        <alias old="magic_quotes_runtime" new="set_magic_quotes_runtime()"/>
        <alias old="pos" new="current()"/>
        <alias old="rewind" new="rewinddir()"/>
        <alias old="show_source" new="highlight_file()"/>
        <alias old="sizeof" new="count()"/>
        <alias old="strchr" new="strstr()"/>
    </test>
</phpcheckstyle-configuration>
